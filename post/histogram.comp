USE_TEXTURE2D(tInput);

#ifdef PIXEL_MASK

USE_TEXTURE2D( tPixelMask );

#endif

USE_INTERLOCKED_BUFFER(bHistogram,0);

COMPUTE(16,16,1)
{
	//check bounds
	uint2 size; uint mipCount;
	imageSize2D( tInput, size.x, size.y, mipCount );
	if( DISPATCH_THREAD_ID.x >= size.x || DISPATCH_THREAD_ID.y >= size.y )
	{ return; }

#ifdef PIXEL_MASK
	if( imageLoad( tPixelMask, DISPATCH_THREAD_ID.xy ).x <= 0 )//positive values only
	{ return; }
#endif

	//load color
	vec4 c = imageLoad(tInput, DISPATCH_THREAD_ID.xy);
	
	//convert color to integer bin value
	uint4 bins = uint4( floor( c * 255.0 + vec4(0.5,0.5,0.5, 0.5) ) );
	
	//increment histogram values
	uint prev;
	interlockedAdd( bHistogram, bins.r    , 1, prev );
	interlockedAdd( bHistogram, bins.g+256, 1, prev );
	interlockedAdd( bHistogram, bins.b+512, 1, prev );
	interlockedAdd( bHistogram, bins.a+768, 1, prev );
}